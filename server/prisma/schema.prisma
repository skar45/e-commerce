// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int         @id @default(autoincrement())
  email     String      @unique
  username  String      @unique
  password  String
  ListItem  ListItem[]
  Review    Review[]
  WishList  WishList[]
  Purchased Purchased[]
}

model Product {
  id          Int         @id @default(autoincrement())
  price       Decimal
  title       String
  description String
  category    String[]
  tags        String[]
  stock       Int
  img         String[]
  ListItem    ListItem[]
  Review      Review[]
  WishList    WishList[]
  Purchased   Purchased[]
}

model ListItem {
  id        Int     @id @default(autoincrement())
  Product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId Int
  User      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    Int
  amount    Int
}

model Review {
  id          Int     @id @default(autoincrement())
  Product     Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  User        User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  rating      Int
  description String
  title       String
  productId   Int
  userId      Int
}

model WishList {
  id        Int     @id @default(autoincrement())
  Product   Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  User      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  productId Int
  userId    Int
}

model Purchased {
  id        Int      @id @default(autoincrement())
  Product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  User      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  amount    Int
  paid      Decimal
  date      DateTime @default(now())
  productId Int
  userId    Int
}
